// src/app/App.tsx
import React, {useMemo} from 'react';
import { ApiProvider } from '../services/http/ApiProvider';
import { AuthProvider } from '../presentation/contexts/AuthContext';
import { AuthService } from '../services/auth/AuthService';
import { ConsoleLogger } from '../services/logging/ConsoleLogger';
import AppNavigator from '../presentation/navigation/AppNavigator';
import axios from "axios";
import Config from "react-native-config";

const logger = new ConsoleLogger('debug');

export default function App() {
    const apiProviderValue = useMemo(() => {
        const httpClient = axios.create({
            baseURL: Config.API_BASE_URL,
            timeout: Number(Config.API_TIMEOUT),
        });
        return { instance: httpClient, setAuthToken: (token: string | null) => {
                httpClient.defaults.headers.common['Authorization'] = token ? `Bearer ${token}` : null;
            }};
    }, []);

    const authService = useMemo(() => new AuthService(apiProviderValue, logger), [apiProviderValue]);

    return (
        <ApiProvider logger={logger}>
            <AuthProvider authService={authService}>
                    <AppNavigator />
            </AuthProvider>
        </ApiProvider>
    );
}